// –ù–∞–∑–≤–∞–Ω–∏–µ –∫–µ—à–∞ (–º–æ–∂–Ω–æ –º–µ–Ω—è—Ç—å –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è—Ö)
const CACHE_NAME = 'vrlounge-v1';

// –§–∞–π–ª—ã –¥–ª—è –∫–µ—à–∏—Ä–æ–≤–∞–Ω–∏—è (–æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ)
const urlsToCache = [
  '/',
  '/index.html',
  '/styles.css',
  // –î–æ–±–∞–≤—å—Ç–µ –ø—É—Ç–∏ –∫ –¥—Ä—É–≥–∏–º –≤–∞—à–∏–º —Ñ–∞–π–ª–∞–º:
  // '/script.js',
  // '/images/logo.png',
];

// –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Service Worker
self.addEventListener('install', event => {
  console.log('üü¢ Service Worker —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
  
  event.waitUntil(
    caches.open(CACHE_NAME)
      .then(cache => {
        console.log('üì¶ –ö–µ—à–∏—Ä—É–µ–º —Ñ–∞–π–ª—ã');
        return cache.addAll(urlsToCache);
      })
  );
});

// –ê–∫—Ç–∏–≤–∞—Ü–∏—è –∏ –æ—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –∫–µ—à–µ–π
self.addEventListener('activate', event => {
  console.log('üîµ Service Worker –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω');
  
  event.waitUntil(
    caches.keys().then(cacheNames => {
      return Promise.all(
        cacheNames.map(cacheName => {
          if (cacheName !== CACHE_NAME) {
            console.log('üóëÔ∏è –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–π –∫–µ—à:', cacheName);
            return caches.delete(cacheName);
          }
        })
      );
    })
  );
});

// –ü–µ—Ä–µ—Ö–≤–∞—Ç –∑–∞–ø—Ä–æ—Å–æ–≤
self.addEventListener('fetch', event => {
  event.respondWith(
    caches.match(event.request)
      .then(response => {
        // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–µ—à–∏—Ä–æ–≤–∞–Ω–Ω—É—é –≤–µ—Ä—Å–∏—é –∏–ª–∏ –¥–µ–ª–∞–µ–º –∑–∞–ø—Ä–æ—Å
        return response || fetch(event.request);
      })
  );
});